import { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { IonicModule } from '@ionic/angular';
import { CommonModule } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ionic5-star-rating.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@ionic/angular';

const _c0 = function (a0, a1) { return { "width": a0, "height": a1 }; };
const _c1 = function (a0, a1) { return { "color": a0, "font-size": a1 }; };
function StarRating_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 2);
    ɵngcc0.ɵɵlistener("click", function StarRating_button_1_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.changeRating($event); });
    ɵngcc0.ɵɵelement(1, "ion-icon", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const index_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("id", index_r1);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(4, _c0, ctx_r0.fontSize, ctx_r0.fontSize));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("name", ctx_r0.halfStar === "true" && ctx_r0.rating - index_r1 > 0 && ctx_r0.rating - index_r1 <= 0.5 ? ctx_r0.halfIcon : index_r1 < ctx_r0.Math.round(ctx_r0.parseFloat(ctx_r0.rating)) ? ctx_r0.activeIcon : ctx_r0.defaultIcon);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(7, _c1, index_r1 < ctx_r0.Math.round(ctx_r0.parseFloat(ctx_r0.rating)) ? ctx_r0.activeColor : ctx_r0.defaultColor, ctx_r0.fontSize));
} }
const HTML_TEMPLATE = `
<div class="ionic5-star-rating">
  <button [ngStyle]="{'width' : fontSize, 'height' : fontSize}" *ngFor="let index of iconsArray" id="{{index}}" type="button" ion-button icon-only (click)="changeRating($event)">
    <ion-icon [ngStyle]="{'color':index < this.Math.round(this.parseFloat(rating)) ? activeColor : defaultColor, 'font-size' : fontSize }" name="{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}"></ion-icon>
  </button>
</div>
`;
/** @type {?} */
const CSS_STYLE = `
    .ionic5-star-rating button {
        background: none;
        box-shadow: none;
        -webkit-box-shadow: none;
        padding : 0px;
    }
`;
class StarRating {
    constructor() {
        this.ratingChanged = new EventEmitter();
        this.readonly = "false";
        this.activeColor = '#488aff';
        this.defaultColor = '#aaaaaa';
        this.activeIcon = 'star';
        this.defaultIcon = 'star-outline';
        this.halfIcon = 'star-half';
        this.halfStar = "false";
        this.maxRating = 5;
        this.fontSize = '28px';
        this.iconsArray = [];
        this.Math = Math;
        this.parseFloat = parseFloat;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.rating = this.rating || 3; //default after input`s initialization
        for (var i = 0; i < this.maxRating; i++) {
            this.iconsArray.push(i);
        }
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    writeValue(obj) {
        this.rating = obj;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.readonly = isDisabled ? "true" : "false";
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set rating(val) {
        this._rating = val;
        // for form
        if (this.onChange) {
            this.onChange(val);
        }
    }
    /**
     * @return {?}
     */
    get rating() {
        return this._rating;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    changeRating(event) {
        if (this.readonly && this.readonly === "true")
            return;
        // event is different for firefox and chrome
        /** @type {?} */
        let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);
        if (this.halfStar && this.halfStar === "true") {
            this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;
        }
        else {
            this.rating = id + 1;
        }
        // unique event
        this.ratingChanged.emit(this.rating);
    }
}
StarRating.ɵfac = function StarRating_Factory(t) { return new (t || StarRating)(); };
StarRating.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: StarRating, selectors: [["ionic5-star-rating"]], inputs: { readonly: "readonly", activeColor: "activeColor", defaultColor: "defaultColor", activeIcon: "activeIcon", defaultIcon: "defaultIcon", halfIcon: "halfIcon", halfStar: "halfStar", maxRating: "maxRating", fontSize: "fontSize", rating: "rating" }, outputs: { ratingChanged: "ratingChanged" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: StarRating,
                multi: true
            }
        ])], decls: 2, vars: 1, consts: [[1, "ionic5-star-rating"], ["type", "button", "ion-button", "", "icon-only", "", 3, "ngStyle", "id", "click", 4, "ngFor", "ngForOf"], ["type", "button", "ion-button", "", "icon-only", "", 3, "ngStyle", "id", "click"], [3, "ngStyle", "name"]], template: function StarRating_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, StarRating_button_1_Template, 2, 10, "button", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.iconsArray);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgStyle, ɵngcc2.IonIcon], styles: [".ionic5-star-rating[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\n        background: none;\n        box-shadow: none;\n        -webkit-box-shadow: none;\n        padding : 0px;\n    }"] });
/** @nocollapse */
StarRating.ctorParameters = () => [];
StarRating.propDecorators = {
    rating: [{ type: Input }],
    ratingChanged: [{ type: Output }],
    readonly: [{ type: Input }],
    activeColor: [{ type: Input }],
    defaultColor: [{ type: Input }],
    activeIcon: [{ type: Input }],
    defaultIcon: [{ type: Input }],
    halfIcon: [{ type: Input }],
    halfStar: [{ type: Input }],
    maxRating: [{ type: Input }],
    fontSize: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StarRating, [{
        type: Component,
        args: [{
                selector: 'ionic5-star-rating',
                template: HTML_TEMPLATE,
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: StarRating,
                        multi: true
                    }
                ],
                styles: [CSS_STYLE]
            }]
    }], function () { return []; }, { ratingChanged: [{
            type: Output
        }], readonly: [{
            type: Input
        }], activeColor: [{
            type: Input
        }], defaultColor: [{
            type: Input
        }], activeIcon: [{
            type: Input
        }], defaultIcon: [{
            type: Input
        }], halfIcon: [{
            type: Input
        }], halfStar: [{
            type: Input
        }], maxRating: [{
            type: Input
        }], fontSize: [{
            type: Input
        }], rating: [{
            type: Input
        }] }); })();
if (false) {
    /**
     * @type {?}
     * @private
     */
    StarRating.prototype._rating;
    /**
     * @type {?}
     * @private
     */
    StarRating.prototype.onChange;
    /**
     * @type {?}
     * @private
     */
    StarRating.prototype.onTouched;
    /** @type {?} */
    StarRating.prototype.disabled;
    /** @type {?} */
    StarRating.prototype.ratingChanged;
    /** @type {?} */
    StarRating.prototype.readonly;
    /** @type {?} */
    StarRating.prototype.activeColor;
    /** @type {?} */
    StarRating.prototype.defaultColor;
    /** @type {?} */
    StarRating.prototype.activeIcon;
    /** @type {?} */
    StarRating.prototype.defaultIcon;
    /** @type {?} */
    StarRating.prototype.halfIcon;
    /** @type {?} */
    StarRating.prototype.halfStar;
    /** @type {?} */
    StarRating.prototype.maxRating;
    /** @type {?} */
    StarRating.prototype.fontSize;
    /** @type {?} */
    StarRating.prototype.Math;
    /** @type {?} */
    StarRating.prototype.parseFloat;
    /** @type {?} */
    StarRating.prototype.iconsArray;
}

/**
 * @fileoverview added by tsickle
 * Generated from: lib/ionic5-star-rating.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class StarRatingModule {
}
StarRatingModule.ɵfac = function StarRatingModule_Factory(t) { return new (t || StarRatingModule)(); };
StarRatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StarRatingModule });
StarRatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[
            IonicModule,
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StarRatingModule, { declarations: function () { return [StarRating]; }, imports: function () { return [IonicModule,
        CommonModule]; }, exports: function () { return [StarRating]; } }); })();
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StarRatingModule, [{
        type: NgModule,
        args: [{
                declarations: [StarRating],
                imports: [
                    IonicModule,
                    CommonModule
                ],
                exports: [StarRating]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * Generated from: public-api.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * Generated from: ionic5-star-rating.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { StarRating, StarRatingModule };

//# sourceMappingURL=ionic5-star-rating.js.map